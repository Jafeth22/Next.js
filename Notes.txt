Next.js pre-renders components of React, it means that ours HTML will include react components

CMS = Content Management System, for this project is strapi
    •npx create-next-app project-name = To create a new Next project

npx next [dev] [build, start] [[someCommand] --help]= To execute the command directly
    •dev = To execute in dev mode, bacause it will render each time to see the lastest changes
    •--help = To see the another options
        •someCommand = We can type some command followed by the help
    •build = It will generate the build/compile the production version
    •start = It will execute the production version

package.json
    •private: true = This is because this is not the library that we want to publish to the npm registry

package.json > scripts = To configure `dev` script 
    •create section "scripts"
    •create dev, add the command. Example: "dev": "next dev", to execute this: npm run dev

The framework uses a filesystem-based router, it means that looks inside the pages folder and automatically map the routes inside the folder, i.e. 

robot.txt = It is usel to tell the search engines which pages they can index
    •User-agent: * = All search engines
    •Allow: / = All the pages

Markdown = This is a way to create an articule
    •command/Ctrl + Shift + P -> Markdown: Open Preview to the Side = To see the preview of what you're typing

lib Folder = It will contain any code that's not specific to pages or other visual component

Global Variables = These settings should only be used on local machine, should not be included on version control
    .env = This is global file, where you can add global variables
    .env.local = This works when we are working local, overriding .env file, that is for production

tailwindcss = It's a CSS framework
    •npx tailwindcss init -p = init will initialize the configuration files, -p initialize the PostCSS file

----------------------------------------------------------------
Development vs Production Server
----------------------------------------------------------------
First, the component is render on the server, then the Server takes JS code and generates the components/HTML Page, it means the component is render twice, 1 from the server and 1 from the browser

----------------------------------------------------------------
Deployment
----------------------------------------------------------------
To deploy a project like this (with all Next.js App Features, like API Routes, Incremental Static Regeneration...)
    •we could use https://vercel.com/ or https://www.netlify.com/
    •Sincronize with some repository page 
    •Configure and publish the selected repository

To deploy a static web-site
    •Local
        •npm run build = Run build command
        •npx next export -o folderName = To export static files
        •npx serve folderName/ = To run a server on that folder and test the app
    •Deploy
        •we could use https://www.netlify.com/
        •sites section
        •Drag and drop folderName already created
        •Configure and publish the project

Deploy with Linux Server using Nginx
    •Use could use https://www.digitalocean.com/, Amazon EC2 or Google Cloud
    •Create a project
    •Copy the UP given on the web
        •paste it on local console 
        •type = ssh root@IP
        •Also, pase it on the web brower to check it
    •Install necessary packages
    •Use FTP client to upload the project
        •Upload files:
            - /var/www/html (delete the files inside there)
    •Drap and drop files inside the BuildedFolderName
    
----------------------------------------------------------------
React Query
----------------------------------------------------------------
•useQuery hook = It's to fetch data straight away and usually cache 
                data as well, also it's used tipically with GET request, This hook is necessary to be installed if you want to use it (see REEDME file inside 2nd Folder/Project)
•useMutation hook = Here, we define the request in a moment, then, we'll execute, it is mostly used with POST, PUT or DELETE requests